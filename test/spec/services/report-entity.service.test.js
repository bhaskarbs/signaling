'use strict';
describe('ReportEntity Entity', function () {
  var ReportEntity;
  beforeEach(function () {
    module('saintApp');
    inject(function ($injector) {
      ReportEntity = $injector.get('ReportEntity');
    });
  });
  it('should exists', function () {
    expect(ReportEntity).toBeDefined();
  });
  it('should have these keys', function () {
    expect(ReportEntity.hasOwnProperty('filterName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('active')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('configKey')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('filterType')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('searchActive')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('contents')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportPeriod')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('submittedDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('ingredient')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('licenseNumber')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('licenseName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportIngredientsNames')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportComparatorPeriod')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportCumulativePeriod')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('threshold')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('denominator')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('columnName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportKey')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportId')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportDesc')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportType')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportCreationDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportDueDays')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportStartDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportEndDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportStatus')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('submissionDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportAsOfDateDetails')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportMilestones')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('caseList')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportLicenses')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportProducts')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportIngredients')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('groups')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('users')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('generateFinalDraftReport')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('submissionRunDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('submissionRunTime')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('eventReceiptDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('initialReceiptDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('followReceiptDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('iCSRSubmissionDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('otherReceiptType')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('nonSeriousListMedWatchReports')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('includeCasesNotPreviouslyReported')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('signal')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportCustomName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('baseCaseListCustomName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('isBlinded')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('baseCaseListName')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('caseListDesc')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('baseCaseListKey')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('allDatesFlag')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('routedDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('caseCompletionDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportUpdatedDate')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('primarySort')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('secondarySort')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportMode')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('setQueryUI')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('selectedUsersGroup')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('reportOwner')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('additionalReports')).toBeTruthy();
    expect(ReportEntity.hasOwnProperty('isReportPackage')).toBeTruthy();
  });
  it('should have these many keys', function () {
    expect(Object.keys(ReportEntity).length).toEqual(67);
  });
});
